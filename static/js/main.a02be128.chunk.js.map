{"version":3,"sources":["redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","api/api.js","components/Navbar/Navbar.module.css","Music/Treck/Lucky Luke - Cooler Than Me.mp3","components/Footer/Footer.module.css","assets/images/loading.svg","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Footer/Footer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","a","usersAPI","data","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","component","validate","text","Boolean","window","location","hostname","match","Header","s","header","src","alt","loginBlock","isAuth","onClick","to","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","News","Music","controls","MyMusic","Settings","Footer","footer","maxLength50","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummariError","Login","remerberMe","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","Preloader","DialogsConteiner","lazy","ProfileContainer","UsersContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","promise","Promise","all","AppWithRouter","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","loading","value","maxLength","posts","likesCount","profile","newPostText","addPostActionCreator","setStatus","getUserProfile","newPost"],"mappings":"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","file":"static/js/main.a02be128.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\n// type DialogsType = {\r\n//     id: number\r\n//     name: string\r\n// }\r\n\r\n// type MessagesType = {\r\n//     id: number\r\n//     message: string\r\n// }\r\n\r\nlet initialState = {\r\n    dialogs: [{\r\n        id: 1,\r\n        name: \"Sasha\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Andrey\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Sveta\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Victor\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Valera\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Anya\"\r\n    }\r\n    ],\r\n    messages: [{\r\n        id: 1,\r\n        message: \"Hi\"\r\n    },\r\n    {\r\n        id: 2,\r\n        message: \"How is your react.js\"\r\n    },\r\n    {\r\n        id: 3,\r\n        message: \"Yo!\"\r\n    },\r\n    {\r\n        id: 4,\r\n        message: \"Yo!Victor\"\r\n    },\r\n    {\r\n        id: 5,\r\n        message: \"Yo!Valera\"\r\n    },\r\n    {\r\n        id: 6,\r\n        message: \"Yo!Anya\"\r\n    }\r\n    ]\r\n};\r\n\r\n// export type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 7,\r\n                    message: body\r\n                }]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// type SendMessageCreatorActionType = {\r\n//     type: typeof SEND_MESSAGE\r\n//     newMessageBody: string\r\n// }\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items,itemsId,objPropName, newObjProps) => {\r\n    return items.map( u => {\r\n    if (u[objPropName] === itemsId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n    })\r\n}","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FETCHING_PROGRESS = 'TOGGLE_IS_FETCHING_PROGRESS';\r\n\r\n// type UserType = {\r\n//     id: number\r\n//     name: string\r\n//     status: string\r\n// }\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n// type InitialState = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n                    followed: true\r\n                })\r\n            }\r\n            case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n                        followed: false\r\n                    })\r\n                }\r\n                case SET_USERS: {\r\n                    return {\r\n                        ...state,\r\n                        users: action.users\r\n                    }\r\n                }\r\n                case SET_CURRENT_PAGE: {\r\n                    return {\r\n                        ...state,\r\n                        currentPage: action.currentPage\r\n                    }\r\n                }\r\n                case SET_TOTAL_USERS_COUNT: {\r\n                    return {\r\n                        ...state,\r\n                        totalUsersCount: action.count\r\n                    }\r\n                }\r\n                case TOGGLE_IS_FETCHING: {\r\n                    return {\r\n                        ...state,\r\n                        isFetching: action.isFetching\r\n                    }\r\n                }\r\n                case TOGGLE_IS_FETCHING_PROGRESS: {\r\n                    return {\r\n                        ...state,\r\n                        followingInProgress: action.isFetching ?\r\n                            [...state.followingInProgress, action.userId] :\r\n                            state.followingInProgress.filter(id => id !== action.userId)\r\n                    }\r\n                }\r\n                default:\r\n                    return state;\r\n    }\r\n}\r\n// type FollowSuccessActionType = {\r\n//     type: typeof FOLLOW,\r\n//     userId: number\r\n// }\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n// type UnfollowSuccessActionType = {\r\n//     type: typeof UNFOLLOW,\r\n//     userId: number\r\n// }\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n// type SetUsersActionType = {\r\n//     type: typeof SET_USERS,\r\n//     users: Array<UserType>\r\n// }\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n// type SetCurrentPageActionType = {\r\n//     type: typeof SET_CURRENT_PAGE,\r\n//     currentPage: number\r\n// }\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n// type SetUsersTotalCountActionType = {\r\n//     type: typeof SET_TOTAL_USERS_COUNT,\r\n//     count: number\r\n// }\r\nexport const setUsersTotalCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\n// type ToggleIsFetchingActionType = {\r\n//     type: typeof TOGGLE_IS_FETCHING,\r\n//     isFetching: boolean\r\n// }\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n// type ToggleFollowingProgressActionType = {\r\n//     type: typeof TOGGLE_IS_FETCHING_PROGRESS,\r\n//     isFetching: boolean,\r\n//     userId: number\r\n// }\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FETCHING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create ({\r\n        withCredentials: true,\r\n        baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {\r\n            \"API-KEY\" : \"765b18ea-5e0b-4a18-861a-fcd3bcb89181\"\r\n        }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10)  {\r\n        return instance.get (`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    follow (userId) {\r\n        return instance.post (`follow/${userId}`)\r\n    },\r\n    unfollow (userId) {\r\n        return instance.delete (`follow/${userId}`)\r\n    },\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    \r\n    getProfile (userId) {\r\n        return instance.get (`profile/` + userId);\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get (`profile/status/` + userId);\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put (`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get (`auth/me`)\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post (`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete (`auth/login`)\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__248Go\"};","module.exports = __webpack_public_path__ + \"static/media/Lucky Luke - Cooler Than Me.e75c6bd1.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__jSIf-\"};","module.exports = __webpack_public_path__ + \"static/media/loading.601aa948.svg\";","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children}) => {\r\n    \r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = \"\") => \r\n    <div>\r\n    <Field placeholder={placeholder} \r\n                name={name} \r\n                component={component}\r\n                validate={validate}\r\n                {...props}\r\n                /> {text}\r\n    </div>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from'./Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n        return (\r\n            <header className={s.header}>\r\n            <img src='https://img2.freepng.ru/20171128/22b/blue-butterfly-png-clip-art-5a1cf7c97ff329.4428226815118478815241.jpg' alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                :   <NavLink to={'/login'}>\r\n                    login\r\n                    </NavLink>\r\n}\r\n            </div>\r\n\r\n            </header>\r\n        );}\r\nexport default Header;","import { stopSubmit } from 'redux-form';\r\nimport { authAPI } from '../api/api';\r\n\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n// export type initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export type setAuthUserDataActionPayloadType = {\r\n//     id: number | null,\r\n//     email: string | null,\r\n//     login: string | null,\r\n//     isAuth: boolean,\r\n// }\r\n\r\n// export type setAuthUserDataActionType = {\r\n//     type: typeof SET_USER_DATA,\r\n//     payload: setAuthUserDataActionPayloadType\r\n\r\n// }\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        id,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {\r\n            id,\r\n            email,\r\n            login\r\n        } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, remerberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, remerberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Sume error\";\r\n        dispatch(stopSubmit(\"login\", {\r\n            _error: message\r\n        }))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    \r\n    render() {\r\n        return <Header {...this.props} />\r\n        }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n// import myTreck from \"../../Music/Audio/zvuk-najatiya-knopki-na-kompyuternoy-myishke-12969.mp3\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div><NavLink to=\"/profile\">Profile</NavLink></div>\r\n            <div><NavLink to=\"/dialogs\">Messages</NavLink></div>\r\n            <div><NavLink to=\"/news\">News</NavLink></div>\r\n            <div><NavLink to=\"/music\">Music</NavLink></div>\r\n            <div><NavLink to=\"/settings\">Settings</NavLink></div>\r\n            <div><NavLink to=\"/users\">Users</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nconst News = (props) => {\r\n        return (\r\n                <div>\r\n                    News\r\n                </div>\r\n\r\n        );}\r\nexport default News;","import React from 'react';\r\nimport MyMusic from '../../Music/Treck/Lucky Luke - Cooler Than Me.mp3';\r\n\r\nconst Music = (props) => {\r\n        return (\r\n                <div>\r\n                        <audio controls>\r\n                                <source src={MyMusic} type=\"audio/mp3\" />\r\n                    Your browser does not support the audio element.\r\n                        </audio>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n        return (\r\n                <div>\r\n                    Settings\r\n                </div>\r\n\r\n        );}\r\nexport default Settings;","import React from 'react';\r\nimport s from'./Footer.module.css';\r\nconst Footer = () => {\r\n        return (\r\n            <footer className={s.footer}>\r\n            </footer>\r\n        );}\r\nexport default Footer;","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Input} from \"./../../components/common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from './../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from './../common/FormsControls/FormsControls.module.css';\r\nimport {createField} from './../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField (\"Email\", \"email\", Input, [required, maxLength50])}\r\n                {createField (\"Password\", \"password\", Input, [required, maxLength50], { type: \"password\"} )}\r\n                {createField (null,\"rememberMe\", Input, [], { type: \"checkbox\"}, \"remember me\")}\r\n                \r\n            {error && <div className={style.formSummariError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button className={style.Login}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect (mapStateToProps, {login}) (Login);","import {\r\n    getAuthUserData\r\n} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n// export type InitialStateType = {\r\n//     initialized: boolean,\r\n// }\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export type InitializedSuccessType = {\r\n//     type: typeof INITIALIZED_SUCCESS,\r\n// }\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n// type InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {\r\n    combineReducers,\r\n    createStore,\r\n    compose,\r\n    applyMiddleware\r\n} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {\r\n    reducer as formReducer\r\n} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n            </React.Suspense>\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport { Redirect, Route, withRouter, BrowserRouter } from \"react-router-dom\";\r\nimport Footer from './components/Footer/Footer';\r\nimport LoginPage from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from \"./redux/redux-store\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { withSuspense } from '../src/hoc/withSuspense';\r\n\r\nconst DialogsConteiner = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends Component {\r\n       componentDidMount() {\r\n              this.props.initializeApp();\r\n       }\r\n       render() {\r\n\r\n              if (!this.props.initialized) {\r\n                     return <Preloader />\r\n              }\r\n              return (\r\n                     <div className='app-wrapper'>\r\n                            <HeaderContainer />\r\n                            <Navbar />\r\n                            <div className=\"app-wrapper-content\">\r\n                                   <Route exact path='/'\r\n                                          render={() => <Redirect to={\"/profile\"} />} />\r\n                                   <Route path='/profile/:userId?'\r\n                                          render={withSuspense(ProfileContainer)} />\r\n                                   <Route path='/dialogs'\r\n                                          render={withSuspense(DialogsConteiner)} />\r\n                                   <Route path='/news'\r\n                                          render={() => <News />} />\r\n                                   <Route path='/music'\r\n                                          render={() => <Music />} />\r\n                                   <Route path='/settings'\r\n                                          render={() => <Settings />} />\r\n                                   <Route path='/users'\r\n                                          render={withSuspense(UsersContainer)} />\r\n                                   <Route path='/login'\r\n                                          render={() => <LoginPage />} />\r\n                                   {/* <Route path='*'\r\n                                          render={() => <div>404 NOT FOUND</div>}/> */}\r\n                            </div>\r\n                            <Footer />\r\n                     </div>\r\n              )\r\n       }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n       initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n       withRouter,\r\n       connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nlet AppWithRouter = (props) => {\r\n       return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n              <Provider store={store}>\r\n                     <AppContainer />\r\n              </Provider>\r\n       </BrowserRouter>\r\n}\r\n\r\nexport default AppWithRouter;","import * as serviceWorker from './serviceWorker';\n//import store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import {BrowserRouter} from \"react-router-dom\";\n//import { Provider } from 'react-redux';\nimport AppWithRouter from './App';\n\n    ReactDOM.render(\n        <AppWithRouter/>\n            , document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1K3p2\",\"error\":\"FormsControls_error__280Rh\",\"formSummariError\":\"FormsControls_formSummariError__2NwSE\",\"Login\":\"FormsControls_Login__1pZAN\"};","import React from 'react';\r\nimport loading from '../../../assets/images/loading.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n    <img src={loading} alt = \"\"/>\r\n</div>\r\n}\r\nexport default Preloader","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length>maxLength) return `Max length is ${maxLength}`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3T9e9\",\"loginBlock\":\"Header_loginBlock__1hfmg\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n// type PostsType = {\r\n//     id: number\r\n//     message: string\r\n//     likesCount: number\r\n// }\r\n\r\n// type ProfileType = {\r\n//     id: number\r\n//     message: string\r\n//     likesCount: number\r\n// }\r\n\r\nlet initialState = {\r\n    posts: [{\r\n        id: 1,\r\n        message: \"Hi, how are you?\",\r\n        likesCount: 12\r\n    },\r\n    {\r\n        id: 2,\r\n        message: \"It's my first post.\",\r\n        likesCount: 23\r\n    },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n    newPostText: ''\r\n};\r\n\r\n// export type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// type AddPostActionCreatorActionType = {\r\n//     type: typeof ADD_POST\r\n//     newPostText: string\r\n// }\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\n// type SetUserProfileActionType = {\r\n//     type: typeof SET_USER_PROFILE,\r\n//     profile: ProfileType\r\n// }\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\n// type SetStatusActionType = {\r\n//     type: typeof SET_STATUS,\r\n//     status: string\r\n// }\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}